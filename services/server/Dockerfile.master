ARG CI_REGISTRY_IMAGE
ARG TAG
ARG VIRTUALGL_VERSION
FROM ${CI_REGISTRY_IMAGE}/virtualgl:${VIRTUALGL_VERSION}${TAG}
LABEL maintainer="nathalie.casati@chuv.ch"

ARG DEBIAN_FRONTEND=noninteractive
ARG CARD
ARG XPRA_VERSION
ARG XPRA_KEYCLOAK_AUTH
ARG XPRA_KEYCLOAK_SERVER_URL
ARG XPRA_KEYCLOAK_REALM_NAME
ARG XPRA_KEYCLOAK_CLIENT_ID
ARG XPRA_KEYCLOAK_CLIENT_SECRET_KEY
ARG XPRA_KEYCLOAK_REDIRECT_URI
ARG XPRA_KEYCLOAK_SCOPE
ARG XPRA_KEYCLOAK_GROUPS_CLAIM
ARG XPRA_KEYCLOAK_AUTH_GROUPS
ARG XPRA_KEYCLOAK_AUTH_CONDITION
ARG XPRA_KEYCLOAK_GRANT_TYPE

LABEL server_version=$XPRA_VERSION
LABEL server_tag=$TAG

RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install --no-install-recommends -y \
    libx11-dev libxtst-dev libxcomposite-dev \
    libxdamage-dev libxres-dev libxkbfile-dev \
    python-all-dev pandoc libsystemd-dev \
    libgtk-3-dev python3-dev python3-cairo-dev \
    python-gi-dev xauth x11-xkb-utils \
    xvfb python3-cairo python3-gi-cairo \
    python3-opengl python3-lz4 python3-rencode python3-pil \
    devscripts build-essential lintian debhelper git \
    lsb-release libnvidia-fbc1-470 libvpx-dev libx264-dev \
    libwebp-dev libturbojpeg-dev libavcodec-dev \
    libavformat-dev libavutil-dev libswscale-dev \
    libdrm-dev libprocps-dev liblz4-dev libbrotli-dev \
    libqrencode-dev dh-python libpam-dev python3-numpy \
    python3-brotli keyboard-configuration curl brotli \
    libjs-jquery libjs-jquery-ui xserver-xorg-video-dummy \
    software-properties-common gnupg \
    x11-xserver-utils python3-pip \
    python3-gst-1.0 python3-pycuda \
    dbus-x11 python3-dbus pulseaudio \
    python3-xdg menu-xdg curl \
    pkgconf libavif-dev libyuv-dev libopenh264-dev libxxhash-dev \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio \
    va-driver-all gstreamer1.0-vaapi && \
    pip3 install requests==2.29.0 urllib3==1.26.15 && \
    pip3 install pyinotify netifaces oauthlib python-keycloak cython
#   pip3 install python-uinput

# for nvenc
RUN curl -sSO https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    apt-get update && \
    apt-get -y install cuda

RUN curl -fsSL https://deb.nodesource.com/setup_current.x | bash - && \
    apt-get install -y nodejs && \
    npm i uglify-js -g

#RUN git clone https://github.com/HIP-infrastructure/xpra.git
#ADD "https://api.github.com/repos/HIP-infrastructure/xpra/commits?sha=feat/keycloak-auth-groups&per_page=1" xpra_latest_commit

RUN git clone https://github.com/Xpra-org/xpra.git
ADD "https://api.github.com/repos/Xpra-org/xpra/commits?sha=master&per_page=1" xpra_latest_commit

RUN cd xpra && \
    #git fetch && \
    git pull && \
    #git checkout feat/keycloak-auth-groups && \
    git checkout 759fb0c && \
    # commit from release v6.2.3
    #git checkout 8374640 && \
# building a deb package
    debuild -us -uc -b && \
    cd ..
# building from source
#    python3 ./setup.py install --prefix=/usr \
#    --with-bencode \
#    --with-cython_bencode \
#    --with-server \
#    --with-x11 && \
#    sh packaging/debian/xpra/xpra.postinst configure && \
#    cd ..

#RUN git clone https://github.com/HIP-infrastructure/xpra-html5
#ADD "https://api.github.com/repos/HIP-infrastructure/xpra-html5/commits?sha=fix/type-mismatch&per_page=1" xpra_html5_latest_commit

RUN git clone https://github.com/Xpra-org/xpra-html5
ADD "https://api.github.com/repos/Xpra-org/xpra-html5/commits?sha=master&per_page=1" xpra_html5_latest_commit

RUN cd xpra-html5 && \
    git pull && \
    #git checkout fix/type-mismatch && \
    #git checkout v11.0 && \
    #git checkout 7dce93f && \
    git checkout 085e0df && \
    # commit from Jan 31, 2025 && \
    #git checkout 742025184a0f99653efa57ddf11d85d313b02e7c && \
    ./setup.py deb && \
    cd ..

RUN ls /xpra-*_amd64.deb /xpra_*_amd64.deb |grep -v nvidia |xargs dpkg -i && \
    dpkg -i /xpra-html5/dist/xpra-html5-*.deb

# RUN ls /xpra-*_amd64.deb /xpra_*_amd64.deb |grep -v nvidia |grep -v xpra-client-gnome |xargs dpkg -i && \
#     dpkg -i /xpra-html5/dist/xpra-html5-*.deb

    #apt-get remove -y --purge gnupg && \
    #apt-get autoremove -y --purge && \
    #apt-get clean && \
    #rm -rf /var/lib/apt/lists/* && \


#RUN chmod 644 /etc/xpra/ssl/cert.pem && \
RUN chmod 644 /etc/xpra/ssl-cert.pem && \
    # make all applications started with vglrun use video stream encoding
    echo "\nclass-instance:vglrun=video" >> /etc/xpra/content-type/50_class.conf && \
    # create the xpra user and socket directory
    useradd --create-home --shell /bin/bash xpra --gid xpra --uid 1000 && \
    mkdir -p /run/user/1000/xpra && \
    chown -R 1000 /run/user/1000 && \
    chmod -R 700 /run/user/1000

HEALTHCHECK --interval=10s --timeout=10s --retries=5 --start-period=30s \
  CMD curl -fks https://localhost:8080

WORKDIR /home/xpra

# copy xpra config files
COPY server/config/xpra.conf /etc/xpra/xpra.conf
COPY server/config/10_content_security_policy.txt /etc/xpra/http-headers/10_content_security_policy.txt
COPY server/config/default.png /usr/share/backgrounds/default.png
COPY server/config/default-settings.txt /etc/xpra/html5-client/default-settings.txt

RUN ln -sf /usr/share/backgrounds/default.png /usr/share/backgrounds/ubuntu-default-greyscale-wallpaper.png

# copy entrypoint script and other scripts used in it
COPY server/config/docker-entrypoint.sh /home/xpra/docker-entrypoint.sh
COPY scripts/check-dri.sh /home/xpra/scripts/check-dri.sh
COPY scripts/fix-video-groups.sh /home/xpra/scripts/fix-video-groups.sh
COPY scripts/fix-audio-groups.sh /home/xpra/scripts/fix-audio-groups.sh

ENTRYPOINT ["./docker-entrypoint.sh"]
